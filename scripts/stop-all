#!/bin/bash
set -e

source scripts/logger
# has log_message function
source scripts/kafka-checks
# has check functions:
# check_no_services_running
# check_no_volumes_exist
# check_no_host_folders_for_backup
# check_no_host_folders_for_deletion

# Display help message
show_help() {
    echo "$0 SHUTDOWN AND REMOVE all Kafka services and containers."
    echo "POST-SHUTDOWN OPTIONS:"
    echo "  -b, --backup   Backup host folders before stopping services."
    echo "  -d, --delete   Delete host folders after stopping services."
    echo "  -h, --help     Show this help message and exit."
    echo "  -v, --volume   Remove volumes when bringing down services (Docker Compose)."
    echo ""
    echo "Note: -b and -d options affect host directories used by containers."
    echo "      Use with caution as these operations are not reversible without backups."
}

# Function to backup host directories
backup_host_folders() {    
    # Assuming these are the host directories you want to backup
    for dir in $(get_non_empty_host_folders); do
        log_message "${dir}"
        if [ -d "${dir}" ]; then
            if is_non_empty_dir "${dir}"; then
                srcParent="${dir%/*}"
                srcChild="${dir##*/}"
                # archival not needed if srcParent is empty
                if is_non_empty_dir "${srcParent}"; then
                    backup_dir="/tmp/backup-$(date +%Y%m%d%H%M%S)"
                    mkdir -p $backup_dir
                    tarGzFile="${backup_dir}/${srcChild}.tar.gz"
                    log_message "Creating backup tarball: ${tarGzFile} from srcParent: ${srcParent} srcChild: ${srcChild}"
                    log_eval_command "tar -czf ${tarGzFile} -C ${srcParent} ${srcChild}"
                else
                    log_message "Skipping backup tarball for empty host folder: ${dir}"
                fi
            else
                log_message "Nothing to backup from empty host folder: ${dir}"
            fi
        else
            log_message "WARNING: host folder: ${dir} not found."
            log_message "Folder recreated as required for Docker Desktop file sharing."
            log_eval_command "mkdir -p ${dir}"
            log_eval_command "chown -R $USER:staff ${dir}"
            log_eval_command "chmod -R 755 ${dir}"
            log_message "Ensure host folder ${dir} "
            log_message "is added to Docker Desktop File Share settings."
        fi
    done
}

delete_host_folders() {
    for dir in $(get_non_empty_host_folders); do
        if [ -d "$dir" ]; then
            log_message "Deleting contents of host folder: $dir"
            rm -rf "$dir/*"
        else
            log_message "Unable to delete: host folder does not exist: $dir"
        fi
    done
}

# Check for help flag at the beginning
if [[ $# -gt 0 ]]; then
    key="$1"
    case $key in
        -h|--help)
            show_help
            exit 0
            ;;
    esac
fi

# Process command line arguments
declare -a operations
declare volume_flag=""
while [[ $# -gt 0 ]]; do
    key="$1"
    case $key in
        -b|--backup)
            operations+=("backup")
            shift # past argument
            ;;
        -d|--delete)
            operations+=("delete")
            shift # past argument
            ;;
        -h|--help)
            show_help
            exit 0
            ;;
        -v|--volume)
            volume_flag="-v"
            shift # past argument
            ;;
        *)    # unknown option
            log_message "Unknown option $1"
            log_message "Exiting with status code 1"
            exit 1
            ;;
    esac
done

# Log then execute command to bring down Docker Compose services, 
log_message "Bringing down Docker Compose services..."
log_eval_command "docker compose -f docker/docker-compose.yml down ${volume_flag:=}"

# Execute operations after services are down
for op in "${operations[@]}"; do
    case $op in
        "backup")
            backup_host_folders
            ;;
        "delete")
            log_message "Waiting 10 seconds before deleting to ensure all services are down..."
            sleep 10
            delete_host_folders
            ;;
    esac
done

if check_no_services_running; then
    log_message "All services have been shut down."
    if check_no_volumes_exist; then
        log_message "All Docker volumes have been removed."
    else
        log_message "Docker volumes still exist."
    fi
else
    log_message "Failed to shut down all services."
fi

